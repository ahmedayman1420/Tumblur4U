{
  "stats": {
    "suites": 41,
    "tests": 57,
    "passes": 57,
    "pending": 0,
    "failures": 0,
    "start": "2022-01-01T22:59:24.810Z",
    "end": "2022-01-01T23:01:31.685Z",
    "duration": 126875,
    "testsRegistered": 57,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "37a21417-738b-4cfb-823f-fd577e9cb6f6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "60c04a38-1790-4640-b8a3-b0ada74a33ba",
          "title": "Post APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
          "file": "\\test\\postTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8385b121-3530-487c-b1c7-96c47a8a8423",
              "title": "Function createPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Post",
                  "fullTitle": "Post APIs Function createPost It Should Create New Post",
                  "timedOut": false,
                  "duration": 6613,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n  },\n  body: {\n    postHtml: '</>',\n    type: 'link',\n    state: 'published',\n    tags: ['tumblr', 'cmp'],\n  },\n};\npostFunctions.createPost(req.params.blogId, req.body.postHtml, req.body.type, req.body.state, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Created Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "79db92b4-37d7-44db-82b5-868c85b61b89",
                  "parentUUID": "8385b121-3530-487c-b1c7-96c47a8a8423",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79db92b4-37d7-44db-82b5-868c85b61b89"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6613,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e6cd657c-074b-45b4-97db-009e7ececbe0",
              "title": "Function showPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Show Post",
                  "fullTitle": "Post APIs Function showPost It Should Show Post",
                  "timedOut": false,
                  "duration": 269,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  url: '',\n  params: {\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n};\npostFunctions.showPost(req.url,req.params.postId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Post Returned Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "d01e5045-714a-454a-8c02-c436d31c6d09",
                  "parentUUID": "e6cd657c-074b-45b4-97db-009e7ececbe0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d01e5045-714a-454a-8c02-c436d31c6d09"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 269,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "e91711b5-b21e-4bfd-b5a1-142f8339aba5",
              "title": "Function makeComment",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Make Comment",
                  "fullTitle": "Post APIs Function makeComment It Should Make Comment",
                  "timedOut": false,
                  "duration": 743,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.makeComment(req.params.blogId, req.params.postId, req.body.text).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Comment Posted Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "533ffe22-0d03-4890-b209-522335158ac6",
                  "parentUUID": "e91711b5-b21e-4bfd-b5a1-142f8339aba5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "533ffe22-0d03-4890-b209-522335158ac6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 743,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d2245a2e-56ef-42a2-ba13-ff3db1f1be1f",
              "title": "Function reblogPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Reblog a Post",
                  "fullTitle": "Post APIs Function reblogPost It Should Reblog a Post",
                  "timedOut": false,
                  "duration": 665,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n  body: {\n    text: 'Very Good Post',\n  },\n};\npostFunctions.reblogPost(req.params.blogId, req.params.postId, req.body.text)\n    .then((ret) => {\n      expect(ret).to.be.a('string');\n      expect(ret).to.be.eq('Post Reblogged Successfully');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "e5443d92-b0ff-4cdb-b351-168e7a2cc133",
                  "parentUUID": "d2245a2e-56ef-42a2-ba13-ff3db1f1be1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e5443d92-b0ff-4cdb-b351-168e7a2cc133"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 665,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "0d563065-bf69-468d-b1df-bf81712a1cf8",
              "title": "Function loopLikeAndCheck",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Array and Check if an Element Exists",
                  "fullTitle": "Post APIs Function loopLikeAndCheck It Should Loop on an Array and Check if an Element Exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = '61af36a793d7c3194ff42269';\nconst b = '61ae881aab9ea73f2282b03e';\nconst c = '61ae887d2676ed5d9b5d532f';\nconst arr = [\n  {isDeleted: false, blogId: a},\n  {isDeleted: false, blogId: b},\n  {isDeleted: false, blogId: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopLikeAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopLikeAndCheck(arr, element)[1].should.be.eq(0);\npostFunctions.loopLikeAndCheck(arr, element)[2].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "9ae3da46-d3f1-4e64-bb8c-2a8953faccb2",
                  "parentUUID": "0d563065-bf69-468d-b1df-bf81712a1cf8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ae3da46-d3f1-4e64-bb8c-2a8953faccb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "98b01eb0-dde3-4dbd-8ca3-9779eec03f48",
              "title": "Function loopObjAndCheck",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Loop on an Object in an Array and Check if an Id Exists",
                  "fullTitle": "Post APIs Function loopObjAndCheck It Should Loop on an Object in an Array and Check if an Id Exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const a = mongoose.Types.ObjectId('61af36a793d7c3194ff42269');\nconst b = mongoose.Types.ObjectId('61ae881aab9ea73f2282b03e');\nconst c = mongoose.Types.ObjectId('61ae887d2676ed5d9b5d532f');\nconst arr = [\n  {isDeleted: false, _id: a},\n  {isDeleted: false, _id: b},\n  {isDeleted: false, _id: c},\n];\nconst element = '61ae881aab9ea73f2282b03e';\npostFunctions.loopObjAndCheck(arr, element)[0].should.be.eq(1);\npostFunctions.loopObjAndCheck(arr, element)[1].should.be.eq(1);\ndone();",
                  "err": {},
                  "uuid": "4ea965fb-c548-4d02-a074-71302a09b0a4",
                  "parentUUID": "98b01eb0-dde3-4dbd-8ca3-9779eec03f48",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ea965fb-c548-4d02-a074-71302a09b0a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "a83b553f-de3b-4c01-ac08-29bdd83c2c81",
              "title": "Function likePress",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Like or Unlike a Post",
                  "fullTitle": "Post APIs Function likePress It Should Like or Unlike a Post",
                  "timedOut": false,
                  "duration": 894,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04',\n    postId: '61ca5d91a8a4556c5b24f1f4',\n  },\n};\npostFunctions.likePress(req.params.blogId, req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  // expect(ret).to.be.eq('Post Liked Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "30e81b5a-9e84-4ee8-be1f-431f13c4850f",
                  "parentUUID": "a83b553f-de3b-4c01-ac08-29bdd83c2c81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "30e81b5a-9e84-4ee8-be1f-431f13c4850f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 894,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "845477be-5f3b-4ace-a580-d4ddb546dbca",
              "title": "Function getNotes",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Post Notes",
                  "fullTitle": "Post APIs Function getNotes It Should Get Post Notes",
                  "timedOut": false,
                  "duration": 208,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    notesId: '61ca5d92a8a4556c5b24f1f9',\n  },\n};\npostFunctions.getNotes(req.params.notesId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Notes Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "0a7290ee-ad0c-4e56-9b2f-7b5553864e14",
                  "parentUUID": "845477be-5f3b-4ace-a580-d4ddb546dbca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a7290ee-ad0c-4e56-9b2f-7b5553864e14"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 208,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d8f43d80-560f-4cd4-818f-f13094b6f5d5",
              "title": "Function getDashboard",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Dashboard",
                  "fullTitle": "Post APIs Function getDashboard It Should Get Dashboard",
                  "timedOut": false,
                  "duration": 23504,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  decoded: {\n    email: 'ahmed.ayman.1420@gmail.com'\n  },\n};\npostFunctions.getDashboard(req.decoded.email).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Dashboard Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "696da052-aa91-46a9-b9fc-d4f64280ded4",
                  "parentUUID": "d8f43d80-560f-4cd4-818f-f13094b6f5d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "696da052-aa91-46a9-b9fc-d4f64280ded4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23504,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "b6944212-e1ce-4aa5-8ffd-80a082a7b4c8",
              "title": "Function editPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Edit a Post Post",
                  "fullTitle": "Post APIs Function editPost It Should Edit a Post Post",
                  "timedOut": false,
                  "duration": 345,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61cd7bd4c53c43b422960a2c',\n  },\n  body: {\n    postHtml: '</>',\n    tags: ['tumblr', 'cmp'],\n  },\n};\npostFunctions.editPost(req.params.postId, req.body.postHtml, req.body.tags).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Edited Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "cac8075d-49bf-4d6a-a493-c6e2971bcb58",
                  "parentUUID": "b6944212-e1ce-4aa5-8ffd-80a082a7b4c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cac8075d-49bf-4d6a-a493-c6e2971bcb58"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 345,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8684bf2a-d748-40c5-8ffc-a7170f14caae",
              "title": "Function reportPost",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Report a Post",
                  "fullTitle": "Post APIs Function reportPost It Should Report a Post",
                  "timedOut": false,
                  "duration": 188,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    postId: '61cd7bd4c53c43b422960a2c',\n  },\n};\npostFunctions.reportPost(req.params.postId).then((ret) => {\n  expect(ret).to.be.a('string');\n  expect(ret).to.be.eq('Post Reported Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "a7bc6fc4-ffc3-4c89-8d27-3167f43c663c",
                  "parentUUID": "8684bf2a-d748-40c5-8ffc-a7170f14caae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7bc6fc4-ffc3-4c89-8d27-3167f43c663c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 188,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c32f0313-7388-46a1-86ea-ed052eedbcf0",
              "title": "Function getBlogPosts",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Blog Posts",
                  "fullTitle": "Post APIs Function getBlogPosts It Should Blog Posts",
                  "timedOut": false,
                  "duration": 17094,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.getBlogPosts(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Blog Posts Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f96dd316-1ae0-45e7-9255-2b70b0caaaf4",
                  "parentUUID": "c32f0313-7388-46a1-86ea-ed052eedbcf0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f96dd316-1ae0-45e7-9255-2b70b0caaaf4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17094,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "637128a4-ffa2-4f73-94f7-717dc33f92b6",
              "title": "Function getLikedPosts",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Liked Posts",
                  "fullTitle": "Post APIs Function getLikedPosts It Should Get Liked Posts",
                  "timedOut": false,
                  "duration": 2352,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.getLikedPosts(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Liked Posts Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "dc5f70bb-37ec-40a5-bdf1-8a1f2d926044",
                  "parentUUID": "637128a4-ffa2-4f73-94f7-717dc33f92b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc5f70bb-37ec-40a5-bdf1-8a1f2d926044"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2352,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ed037539-4da8-411e-88e6-f1e1a6bc9c4b",
              "title": "Function activityFeed",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Get Activity Feed",
                  "fullTitle": "Post APIs Function activityFeed It Should Get Activity Feed",
                  "timedOut": false,
                  "duration": 48332,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const req = {\n  params: {\n    blogId: '61c9d6b82569f9abb33ebe04'\n  },\n};\npostFunctions.activityFeed(req.params.blogId).then((ret) => {\n  expect(ret).to.be.a('object');\n  expect(ret.msg).to.be.eq('Activity Feed Got Successfully');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "65775000-4eb6-41e1-8f83-de978b2728df",
                  "parentUUID": "ed037539-4da8-411e-88e6-f1e1a6bc9c4b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "65775000-4eb6-41e1-8f83-de978b2728df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 48332,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "ece50cc4-0434-4752-a316-3c6f93d9526a",
              "title": "Upload media APIs",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests uploading image on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading image on server, gets url",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'image2022-1-1T03-59-05.770Z.jpg';\n    \npostFunctions.uploadAny(blobName, 'image/jpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "99ee0359-2223-4d42-843c-0b6eb36d03a3",
                  "parentUUID": "ece50cc4-0434-4752-a316-3c6f93d9526a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading video on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading video on server, gets url",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'video2022-01-01T15-23-27.384Z.mp4';\n    \npostFunctions.uploadAny(blobName, 'video/mp4')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "88ea4b61-9990-4c27-95a2-c30528ac4cc5",
                  "parentUUID": "ece50cc4-0434-4752-a316-3c6f93d9526a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests uploading audio on server, gets url",
                  "fullTitle": "Post APIs Upload media APIs It tests uploading audio on server, gets url",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blobName = 'audio2021-12-28T04-06-07.388Z.mpeg';\n    \npostFunctions.uploadAny(blobName, 'audio/mpeg')\n    .then((res)=>{\n      expect(res)\n        .to.be.equal('https://tumblrstorage.blob.core.windows.net/imagess/'+blobName);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "4e49a715-b054-4872-949b-0342f6f5d51d",
                  "parentUUID": "ece50cc4-0434-4752-a316-3c6f93d9526a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99ee0359-2223-4d42-843c-0b6eb36d03a3",
                "88ea4b61-9990-4c27-95a2-c30528ac4cc5",
                "4e49a715-b054-4872-949b-0342f6f5d51d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 43,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "7559ca76-08bd-4620-9f21-bd749f1e38dd",
              "title": "Random posts APIs",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\postTest.js",
              "file": "\\test\\postTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It tests radar posts",
                  "fullTitle": "Post APIs Random posts APIs It tests radar posts",
                  "timedOut": false,
                  "duration": 3637,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "postFunctions.retrieveRandomPosts()\n        .then((res)=>{\n          expect(res.length).to.be.equal(10);\n          done();\n        }).catch(done);",
                  "err": {},
                  "uuid": "cd96981d-80f3-4fdd-a363-33781f108d9e",
                  "parentUUID": "7559ca76-08bd-4620-9f21-bd749f1e38dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It tests trending posts",
                  "fullTitle": "Post APIs Random posts APIs It tests trending posts",
                  "timedOut": false,
                  "duration": 2718,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "post=[\n  {\n    \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n    \"blogId\": '61c9d6b82569f9abb33ebe04',\n    \"postHtml\": '<img width=\"100%\" src=\"https://tumblrstorage.blob.core.windows.net/imagess/image2022-1-1T03-59-05.770Z.jpg]\" alt=\"\">',\n    \"type\": 'text',\n    \"state\": 'published',\n    \"tags\": [ 'edit', 'cmp', 'Trending' ],\n    \"notesId\": '61ca5d91a8a4556c5b24f1f3',\n    \"isDeleted\": false,\n    \"isReported\": false,\n    \"postUrl\": '/61ca5d91a8a4556c5b24f1f4/show_post',\n    \"__v\": 1\n  }\n]\npostFunctions.retrieveTrendingPosts()\n    .then((res)=>{\n      expect(res.trendingPostsLim[0].notesId).to.be.equal(post[0].notesId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "c9f46d78-1d73-4afd-97bf-28f167833901",
                  "parentUUID": "7559ca76-08bd-4620-9f21-bd749f1e38dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd96981d-80f3-4fdd-a363-33781f108d9e",
                "c9f46d78-1d73-4afd-97bf-28f167833901"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6355,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "289df6ef-e681-4319-9224-fe013436cfa1",
          "title": "Search APIs",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
          "file": "\\test\\searchTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1fffed4a-78f7-4a3d-9bbb-d0e30ca1face",
              "title": "Search Dashboard Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\searchTest.js",
              "file": "\\test\\searchTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should get element of hashtags in posts",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get element of hashtags in posts",
                  "timedOut": false,
                  "duration": 774,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'cm',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('cmp');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "ce4a49d7-40ea-4478-8270-1208d4751509",
                  "parentUUID": "1fffed4a-78f7-4a3d-9bbb-d0e30ca1face",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It shows that it is not case sensitive",
                  "fullTitle": "Search APIs Search Dashboard Testing It shows that it is not case sensitive",
                  "timedOut": false,
                  "duration": 889,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'CM',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultHashTag[0]).to.be.equal('cmp');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "cfa219b9-068f-4671-9af7-691cd0ac44db",
                  "parentUUID": "1fffed4a-78f7-4a3d-9bbb-d0e30ca1face",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has the hashtags with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has the hashtags with the regex",
                  "timedOut": false,
                  "duration": 477,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'cm',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      post=[\n        {\n          \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n          \"blogId\": \"61c9d6b82569f9abb33ebe04\",\n          \"postHtml\": \"<img width=\\\"100%\\\" src=\\\"https://64.media.tumblr.com/45dde30f17353eb13ca1be55063e3484/1ef148912162fc2f-7e/s400x600/739708b94fe41c6b50eee06fd95d8d08eeaa0cb4.jpg]\\\" alt=\\\"\\\">\",\n          \"type\": \"text\",\n          \"state\": \"published\",\n          \"tags\": [\n              \"edit\",\n              \"cmp\",\n              \"Trending\"\n          ],\n          \"notesId\": \"61ca5d91a8a4556c5b24f1f3\",\n          \"isDeleted\": false,\n          \"isReported\": false,\n          \"postUrl\": \"/61ca5d91a8a4556c5b24f1f4/show_post\",\n          \"__v\": 1\n      },\n      ];\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "cfd54d39-5e75-4919-a5e9-6712ea4c83e0",
                  "parentUUID": "1fffed4a-78f7-4a3d-9bbb-d0e30ca1face",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get blog with the regex",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get blog with the regex",
                  "timedOut": false,
                  "duration": 326,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  wordName: 'CMP',\n};\nsearch.autoCompleteSearchDashWord(wordName.wordName)\n    .then((res)=>{\n      expect(res.resultBlogs[0].name)\n          .to.be.equal('CMP-2023');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "bdb9c2a6-088c-4bd7-b112-507dda1d8743",
                  "parentUUID": "1fffed4a-78f7-4a3d-9bbb-d0e30ca1face",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get followed/interested tags by a user",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get followed/interested tags by a user",
                  "timedOut": false,
                  "duration": 1266,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      // console.log(res);\n      expect(res.resultFollowedTag[2]).to.be.equal('Writing');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "138d3d54-53e2-4914-988f-1e771890df2f",
                  "parentUUID": "1fffed4a-78f7-4a3d-9bbb-d0e30ca1face",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get interests when no word is entered",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get interests when no word is entered",
                  "timedOut": false,
                  "duration": 1187,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      // console.log(res);\n      expect(res.resultFollowedTag[3]).to.be.equal('Sports');\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "619d2332-4352-42ad-9ecf-2b172e821ce5",
                  "parentUUID": "1fffed4a-78f7-4a3d-9bbb-d0e30ca1face",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should get posts has interested hashtags",
                  "fullTitle": "Search APIs Search Dashboard Testing It Should get posts has interested hashtags",
                  "timedOut": false,
                  "duration": 1108,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const wordName ={\n  userEmail: 'ahmed.ayman.1420@gmail.com',\n};\nsearch.autoCompleteSearchDash(wordName.userEmail)\n    .then((res)=>{\n      post=[\n        {\n          \"_id\": \"61ca5d91a8a4556c5b24f1f4\",\n          \"blogId\": \"61c9d6b82569f9abb33ebe04\",\n          \"postHtml\": \"<img width=\\\"100%\\\" src=\\\"https://64.media.tumblr.com/45dde30f17353eb13ca1be55063e3484/1ef148912162fc2f-7e/s400x600/739708b94fe41c6b50eee06fd95d8d08eeaa0cb4.jpg]\\\" alt=\\\"\\\">\",\n          \"type\": \"text\",\n          \"state\": \"published\",\n          \"tags\": [\n              \"edit\",\n              \"cmp\",\n              \"Trending\"\n          ],\n          \"notesId\": \"61ca5d91a8a4556c5b24f1f3\",\n          \"isDeleted\": false,\n          \"isReported\": false,\n          \"postUrl\": \"/61ca5d91a8a4556c5b24f1f4/show_post\",\n          \"__v\": 1\n      },\n      ];\n      // console.log('res.resultPostHashTag[0].blogId: ', res);\n      expect(res.resultPostHashTag[0].blogId).to.be.equal(post[0].blogId);\n      done();\n    }).catch(done);",
                  "err": {},
                  "uuid": "094a1402-0c39-48b2-aa42-578355f781f1",
                  "parentUUID": "1fffed4a-78f7-4a3d-9bbb-d0e30ca1face",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ce4a49d7-40ea-4478-8270-1208d4751509",
                "cfa219b9-068f-4671-9af7-691cd0ac44db",
                "cfd54d39-5e75-4919-a5e9-6712ea4c83e0",
                "bdb9c2a6-088c-4bd7-b112-507dda1d8743",
                "138d3d54-53e2-4914-988f-1e771890df2f",
                "619d2332-4352-42ad-9ecf-2b172e821ce5",
                "094a1402-0c39-48b2-aa42-578355f781f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6027,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "855d11da-e551-4ff3-8d77-24c163b89dc5",
          "title": "UserBlog Methodes Testing",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
          "file": "\\test\\userBlogTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It gets checkout these blogs",
              "fullTitle": "UserBlog Methodes Testing It gets checkout these blogs",
              "timedOut": false,
              "duration": 2154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "blogFunctions.retrieveRandomBlogs()\n      .then((res) => {\n        expect(res.length).to.be.equal(10);\n        done();\n      }).catch(done);",
              "err": {},
              "uuid": "789e7ca4-8e0e-4524-9489-c35abf8d4ad5",
              "parentUUID": "855d11da-e551-4ff3-8d77-24c163b89dc5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "59909000-b154-4770-85ba-979cd28babf3",
              "title": "Create Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return false because there is already a blog with the same name",
                  "fullTitle": "UserBlog Methodes Testing Create Blog Testing should return false because there is already a blog with the same name",
                  "timedOut": false,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params = {\n  decoded: {\n    email: email,\n  },\n  body:\n  {\n    title: 'Engineering',\n    name: blogName,\n    privacy: false,\n  },\n};\nuserFunctions.createBlog(func_params).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "c96133bc-9eee-4aef-aabf-61ad6e9390c9",
                  "parentUUID": "59909000-b154-4770-85ba-979cd28babf3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c96133bc-9eee-4aef-aabf-61ad6e9390c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 173,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c6e7cc02-8eb3-4fcf-b0ad-8c34624c0e56",
              "title": "Retrieve Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should retrieve all the blog info given its name",
                  "fullTitle": "UserBlog Methodes Testing Retrieve Blog Testing should retrieve all the blog info given its name",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "blogFunctions.retrieveBlog('61c9e680b47e807b87e3dbe9').then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.name).to.be.eq('Diana');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "150ca7ea-7c0b-4b68-a9be-96ebf2a1b14c",
                  "parentUUID": "c6e7cc02-8eb3-4fcf-b0ad-8c34624c0e56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no blog with the given name",
                  "fullTitle": "UserBlog Methodes Testing Retrieve Blog Testing should return null as there is no blog with the given name",
                  "timedOut": false,
                  "duration": 148,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "blogFunctions.retrieveBlog('61b33c94c4bab40beeb82b6f').then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "2b99877b-79b2-47f3-851f-e7cda2e77b44",
                  "parentUUID": "c6e7cc02-8eb3-4fcf-b0ad-8c34624c0e56",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "150ca7ea-7c0b-4b68-a9be-96ebf2a1b14c",
                "2b99877b-79b2-47f3-851f-e7cda2e77b44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 298,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "1a11556e-6e45-43a3-85b4-cd65c47bf2cd",
              "title": "Edit Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should edit the blog and return object",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should edit the blog and return object",
                  "timedOut": false,
                  "duration": 165,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params = {\n  params: {\n    blogId: '61c9e680b47e807b87e3dbe9',\n  },\n  body: {\n    title: 'noor',\n    avatar: 'avatar.jpg',\n    accent: 'red',\n    description: 'This is my Blog',\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.a('object');\n  expect(res.title).to.be.eq('noor');\n  expect(res.avatar).to.be.eq('avatar.jpg');\n  expect(res.accent).to.be.eq('red');\n  expect(res.description).to.be.eq('This is my Blog');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "87769141-1262-46ff-8bfd-594291f1ba47",
                  "parentUUID": "1a11556e-6e45-43a3-85b4-cd65c47bf2cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a message as there is another blog with that name",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should return a message as there is another blog with that name",
                  "timedOut": false,
                  "duration": 298,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params = {\n  params: {\n    blogId: '61c9e680b47e807b87e3dbe9',\n  },\n  body: {\n    name: blogName,\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.eq('URL is not available');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "706865de-01c9-4bd9-a587-1c87774857db",
                  "parentUUID": "1a11556e-6e45-43a3-85b4-cd65c47bf2cd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Edit Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const func_params = {\n  params: {\n    blogId: '61b33c94c4bab40bee182b6f',\n  },\n  body: {\n    name: 'nour',\n  },\n};\nblogFunctions.editBlog(func_params).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "7b3ee4b5-c3f5-430f-bb35-7079b8c19b23",
                  "parentUUID": "1a11556e-6e45-43a3-85b4-cd65c47bf2cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "87769141-1262-46ff-8bfd-594291f1ba47",
                "706865de-01c9-4bd9-a587-1c87774857db",
                "7b3ee4b5-c3f5-430f-bb35-7079b8c19b23"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 630,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "c1877b41-0a47-43e6-9d47-bb12f20e7742",
              "title": "Does Follow Testing Part 2",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return null because the user does not follow this blog any more",
                  "fullTitle": "UserBlog Methodes Testing Does Follow Testing Part 2 should return null because the user does not follow this blog any more",
                  "timedOut": false,
                  "duration": 151,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId = '61c9e7b3b47e807b87e3dc09';\n      userFunctions.doesFollow(email, blogId).then((res) => {\n        expect(res).to.be.a('null');\n        done();\n      }).catch(done);",
                  "err": {},
                  "uuid": "6cb4af7c-9704-4972-90be-5d15abe342ee",
                  "parentUUID": "c1877b41-0a47-43e6-9d47-bb12f20e7742",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6cb4af7c-9704-4972-90be-5d15abe342ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 151,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8b397c0c-f587-4f66-8b0d-fb16d45f54d1",
              "title": "Block Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the blocked blog",
                  "fullTitle": "UserBlog Methodes Testing Block Blog Testing should return object of the blocked blog",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId = '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId = '61c9e680b47e807b87e3dbe9';\nblogFunctions.blockBlog(blogId, blockedBlogId).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "9a1a09c0-ca57-4a71-9e48-0286e4e4bddc",
                  "parentUUID": "8b397c0c-f587-4f66-8b0d-fb16d45f54d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Block Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 149,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId = '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId = '61c9e680b4e807b887e3dbe9';\nblogFunctions.blockBlog(blogId, blockedBlogId).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "35bbfdf0-3f29-4694-9b0e-0e342fe57dd9",
                  "parentUUID": "8b397c0c-f587-4f66-8b0d-fb16d45f54d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a1a09c0-ca57-4a71-9e48-0286e4e4bddc",
                "35bbfdf0-3f29-4694-9b0e-0e342fe57dd9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 458,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "eb7b12fe-394a-40a8-97e0-41836df4b5d7",
              "title": "Unblock Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return object of the unblocked blog",
                  "fullTitle": "UserBlog Methodes Testing Unblock Blog Testing should return object of the unblocked blog",
                  "timedOut": false,
                  "duration": 302,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId = '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId = '61c9e680b47e807b87e3dbe9';\nblogFunctions.unblockBlog(blogId, blockedBlogId).then((res) => {\n  expect(res).to.be.a('object');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "115732eb-872f-4d44-97bf-e986284c725e",
                  "parentUUID": "eb7b12fe-394a-40a8-97e0-41836df4b5d7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null as there is no a blog with the given id",
                  "fullTitle": "UserBlog Methodes Testing Unblock Blog Testing should return null as there is no a blog with the given id",
                  "timedOut": false,
                  "duration": 147,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogId = '61c9e584b47e807b87e3dbd0';\nconst blockedBlogId = '61c9e680b00e807b87e3dbe9';\nblogFunctions.unblockBlog(blogId, blockedBlogId).then((res) => {\n  expect(res).to.be.eq(null);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "465acfe2-7e2b-4448-b65d-ad3c77c1e756",
                  "parentUUID": "eb7b12fe-394a-40a8-97e0-41836df4b5d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "115732eb-872f-4d44-97bf-e986284c725e",
                "465acfe2-7e2b-4448-b65d-ad3c77c1e756"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 449,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d143f880-5270-43da-95d5-94e3a3556790",
              "title": "Delete Blog Testing",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userBlogTest.js",
              "file": "\\test\\userBlogTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return false because there is no blog with the requested id",
                  "fullTitle": "UserBlog Methodes Testing Delete Blog Testing should return false because there is no blog with the requested id",
                  "timedOut": false,
                  "duration": 298,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "userFunctions.deleteBlog(email, blogId)\n  .then((res) => {\n    expect(res).to.be.eq(null);\n    done();\n  }).catch(done);",
                  "err": {},
                  "uuid": "8db21231-838f-401d-84f0-bca416207dfc",
                  "parentUUID": "d143f880-5270-43da-95d5-94e3a3556790",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8db21231-838f-401d-84f0-bca416207dfc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 298,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [
            "789e7ca4-8e0e-4524-9489-c35abf8d4ad5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "ca403a12-02aa-48c2-a02a-28c198e022c8",
          "title": "User Functions",
          "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "18647942-365d-4775-87bd-e9384cc5be1d",
              "title": "Update user",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It sets interests of the user",
                  "fullTitle": "User Functions Update user It sets interests of the user",
                  "timedOut": false,
                  "duration": 171,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'nour.2020@gmail.com';\nconst interests = [\n  \"flowers\",\n  \"math\",\n  \"nasa\",\n  \"education\"\n]\nuserFunc.getInterests(email, interests)\n  .then((result) => {\n    expect(result.followedTags[0]).to.be.eq(interests[0]);\n    done();\n  }).catch(done);",
                  "err": {},
                  "uuid": "73de500e-e0a7-49f4-a009-8413b6106104",
                  "parentUUID": "18647942-365d-4775-87bd-e9384cc5be1d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It updates color theme of the user",
                  "fullTitle": "User Functions Update user It updates color theme of the user",
                  "timedOut": false,
                  "duration": 168,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'nour.2020@gmail.com';\nconst colorNumb = 3;\nuserFunc.updateColor(email, colorNumb).then((result) => {\n  console.log('result: ', result);\n  expect(result.bodyColor).to.be.eq(colorNumb);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "f13c2fd2-3a25-4abd-a8c5-139d48d07f2d",
                  "parentUUID": "18647942-365d-4775-87bd-e9384cc5be1d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "73de500e-e0a7-49f4-a009-8413b6106104",
                "f13c2fd2-3a25-4abd-a8c5-139d48d07f2d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 339,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "994c8ba5-67bd-4b3c-ada8-b2dc8f06afa4",
              "title": "Check Mail Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Check Mail Function It Should Return True",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.1420@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "dc852712-e255-4921-bcad-7d18e3b4bab9",
                  "parentUUID": "994c8ba5-67bd-4b3c-ada8-b2dc8f06afa4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Check Mail Function It Should Return False",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'Afnan@gmail.com';\nuserServices.checkMail(email).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "922ab6d6-4af7-4061-a6e4-30fc8ab6289b",
                  "parentUUID": "994c8ba5-67bd-4b3c-ada8-b2dc8f06afa4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc852712-e255-4921-bcad-7d18e3b4bab9",
                "922ab6d6-4af7-4061-a6e4-30fc8ab6289b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 300,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f9fab6c7-2384-499b-96d9-dcffd5171746",
              "title": "Check blogName Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Check blogName Function It Should Return True",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'CMP-2023';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "1a776eec-8ec3-4595-99d5-4d4f58b960b4",
                  "parentUUID": "f9fab6c7-2384-499b-96d9-dcffd5171746",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Check blogName Function It Should Return False",
                  "timedOut": false,
                  "duration": 148,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const blogName = 'ABCD';\nuserServices.checkBlogName(blogName).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ad6a1dc5-cb47-4bde-b0aa-b4180b353406",
                  "parentUUID": "f9fab6c7-2384-499b-96d9-dcffd5171746",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a776eec-8ec3-4595-99d5-4d4f58b960b4",
                "ad6a1dc5-cb47-4bde-b0aa-b4180b353406"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 298,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "08aacda3-f785-42cc-b3cf-76718ad771de",
              "title": "Create User Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New User",
                  "fullTitle": "User Functions Create User Function It Should Create New User",
                  "timedOut": false,
                  "duration": 248,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst blogName = 'CMP';\nconst password = '12345';\nconst age = '21';\nuserServices.createUser(email, password, blogName, age).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "6d139828-06af-4b7c-8805-59576b9cf49d",
                  "parentUUID": "08aacda3-f785-42cc-b3cf-76718ad771de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d139828-06af-4b7c-8805-59576b9cf49d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 248,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "d4b49ee0-5330-47b6-9bfe-e5a6c7ea1fb0",
              "title": "Send Verification Mail To User",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Send Verification Mail To User",
                  "fullTitle": "User Functions Send Verification Mail To User It Should Send Verification Mail To User",
                  "timedOut": false,
                  "duration": 1492,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'reem.atala555@gmail.com';\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJlZW0uYXRhbGE1NTVAZ21haWwuY29tIiwicm9sZSI6InVzZXIiLCJpYXQiOjE2MzkwNzk3MDd9.V3NXoggu_z7xWDQC8XksfFLsfkjuJsIaWqFwH10nBlE';\nuserServices.verifyMail(name, email, token).then((result) => {\n  expect(result).to.be.eq('verification mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "89f8f277-cf6d-4462-b6bb-357324933132",
                  "parentUUID": "d4b49ee0-5330-47b6-9bfe-e5a6c7ea1fb0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "89f8f277-cf6d-4462-b6bb-357324933132"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1492,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "8d4f4429-4756-4028-8cec-6526ee799666",
              "title": "Checks Input Password",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Return True",
                  "fullTitle": "User Functions Checks Input Password It Should Return True",
                  "timedOut": false,
                  "duration": 73,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '123';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "e4a8f680-557e-4ec5-a67c-fc48b75ce67d",
                  "parentUUID": "8d4f4429-4756-4028-8cec-6526ee799666",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Should Return False",
                  "fullTitle": "User Functions Checks Input Password It Should Return False",
                  "timedOut": false,
                  "duration": 66,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const password = '12345';\nconst oldPassword =\n  '$2b$08$0eaSh6V.pAvCyX8LFE12Ve52cSHUUPVrV0h7DDx0SwA5eCSIGsKsq';\nuserServices.checkPassword(password, oldPassword).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "42985303-dadc-4084-a3e8-e99ee9fdbcc9",
                  "parentUUID": "8d4f4429-4756-4028-8cec-6526ee799666",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4a8f680-557e-4ec5-a67c-fc48b75ce67d",
                "42985303-dadc-4084-a3e8-e99ee9fdbcc9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 139,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "2b9401fa-e40e-4dd8-8304-9bf0c3c1a7bd",
              "title": "Create User Google Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Google User",
                  "fullTitle": "User Functions Create User Google Function It Should Create New Google User",
                  "timedOut": false,
                  "duration": 220,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmed.ayman.cmp@gmail.com';\nconst password = '12345';\nuserServices.createUser(email, password).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "aaf245c4-682d-4bdd-a563-d8435b03c7eb",
                  "parentUUID": "2b9401fa-e40e-4dd8-8304-9bf0c3c1a7bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaf245c4-682d-4bdd-a563-d8435b03c7eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 220,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5f74c620-c255-4a94-9b66-398ad63298bd",
              "title": "Create Primary Blog Function",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Primary Blog When User Sign up ",
                  "fullTitle": "User Functions Create Primary Blog Function It Should Create Primary Blog When User Sign up ",
                  "timedOut": false,
                  "duration": 903,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const email = 'ahmedatcmp@gmail.com';\nconst name = 'Game-1';\nuserServices.createPrimaryBlog(email, name).then((result) => {\n  expect(result).to.be.eq('Blog Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "78c1af20-7155-4b9d-a109-79cf39091b50",
                  "parentUUID": "5f74c620-c255-4a94-9b66-398ad63298bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "78c1af20-7155-4b9d-a109-79cf39091b50"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 903,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f3cd87db-fb93-448f-bc78-62f0ff396b51",
              "title": "Forget Passowrd Mail",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Sned Email To User",
                  "fullTitle": "User Functions Forget Passowrd Mail It Should Sned Email To User",
                  "timedOut": false,
                  "duration": 1613,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = 'Rema';\nconst email = 'ahmed.ayman.1420@gmail.com';\nuserServices.forgetPasswordMail(name, email).then((result) => {\n  expect(result).to.be.eq('forget password mail sent');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "ee79fca4-6c44-42b2-a9d2-629d92ebea7e",
                  "parentUUID": "f3cd87db-fb93-448f-bc78-62f0ff396b51",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee79fca4-6c44-42b2-a9d2-629d92ebea7e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1613,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "2b093399-8b75-401b-8989-609c15e4f3d0",
              "title": "Check Post Id",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User Functions Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 163,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f4';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(true);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "33c3929b-4665-4180-83df-24013ec30034",
                  "parentUUID": "2b093399-8b75-401b-8989-609c15e4f3d0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It Check Post Id",
                  "fullTitle": "User Functions Check Post Id It Check Post Id",
                  "timedOut": false,
                  "duration": 148,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d91a8a4556c5b24f1f0';\nuserServices.checkPostId(postId).then((result) => {\n  expect(result).to.be.eq(false);\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "722b3d94-eb5f-419c-ba13-9c851f28f934",
                  "parentUUID": "2b093399-8b75-401b-8989-609c15e4f3d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33c3929b-4665-4180-83df-24013ec30034",
                "722b3d94-eb5f-419c-ba13-9c851f28f934"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 311,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "6b7afc8e-73e2-4545-bba5-2c499f4edd81",
              "title": "get UserId From PostId ",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "get UserId From PostId ",
                  "fullTitle": "User Functions get UserId From PostId  get UserId From PostId ",
                  "timedOut": false,
                  "duration": 596,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nuserServices.getUserIdFromPostId(postId).then((result) => {\n  expect(result).to.be.eq('61c9d749b33bf76a71baed86');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "8d518d64-18d4-464a-b621-257c0afd713d",
                  "parentUUID": "6b7afc8e-73e2-4545-bba5-2c499f4edd81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d518d64-18d4-464a-b621-257c0afd713d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 596,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "a73f4ed2-6651-425b-8dcc-7529fcbba742",
              "title": "Create Notification",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create Notification",
                  "fullTitle": "User Functions Create Notification It Should Create Notification",
                  "timedOut": false,
                  "duration": 1307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = '61ca5d92a8a4556c5b24f1fa';\nconst type = 'like';\nnotificationFunction.addNotification(postId, type).then((result) => {\n  expect(result).to.be.eq('Created');\n  done();\n}).catch(done);",
                  "err": {},
                  "uuid": "c5ab48e3-f834-4a00-a3c2-c3664190b4b7",
                  "parentUUID": "a73f4ed2-6651-425b-8dcc-7529fcbba742",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c5ab48e3-f834-4a00-a3c2-c3664190b4b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1307,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "5a7c990d-ced2-4eca-b48b-68dc8fdb4197",
              "title": "Create New Chat",
              "fullFile": "C:\\Users\\CMP\\OneDrive\\Documents\\GitHub\\Backend_Tumblr-4u\\test\\userTest.js",
              "file": "\\test\\userTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It Should Create New Chat Message",
                  "fullTitle": "User Functions Create New Chat It Should Create New Chat Message",
                  "timedOut": false,
                  "duration": 457,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "message = 'Test';\n      sendUserId = '61c9d749b33bf76a71baed86';\n      receiveUserId = '61c9e0215954b6332bc203f0';\n      sendBlogName = 'CMP-2023';\n      recieveBlogName = 'Engineer';\n      notificationFunction.addchat(message, sendUserId, receiveUserId, sendBlogName, recieveBlogName).then((result) => {\n        expect(result).to.be.eq('Created');\n        done();\n      }).catch(done);",
                  "err": {},
                  "uuid": "82cde42d-8708-4674-b65b-8a79dd68a624",
                  "parentUUID": "5a7c990d-ced2-4eca-b48b-68dc8fdb4197",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82cde42d-8708-4674-b65b-8a79dd68a624"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 457,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Test_Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Report",
        "reportFilename": "Test_Report"
      },
      "version": "6.0.1"
    }
  }
}